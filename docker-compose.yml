version: '3.9'

services:
  postgres:
    image: postgres:13
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  airflow-init:
    image: apache/airflow:2.7.2
    depends_on:
      - postgres
    env_file: .env
    environment:
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./logs:/opt/airflow/logs
    command: bash -c "airflow db upgrade"

  airflow-webserver:
    image: apache/airflow:2.7.2
    restart: always
    depends_on:
      - airflow-init
    env_file: .env
    environment:
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW__WEBSERVER__RBAC: "True"
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__AUTH_BACKEND: airflow.auth.backends.password_auth
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./logs:/opt/airflow/logs
      - ./entrypoint.sh:/entrypoint.sh
    ports:
      - "8080:8080"
    command: bash /entrypoint.sh
    deploy:
      resources:
        limits:
          memory: 1g

  airflow-scheduler:
    image: apache/airflow:2.7.2
    restart: always
    depends_on:
      - airflow-init
    env_file: .env
    environment:
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./logs:/opt/airflow/logs
      - ./scripts:/opt/airflow/scripts
    command: >
      bash -c "
        airflow scheduler
      "
    deploy:
      resources:
        limits:
          memory: 1g

volumes:
  postgres_data:
